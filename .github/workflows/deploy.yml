name: CI/CD Pipeline - Lint, Test, Build & Deploy

on:
  push:
    branches:
      - main  # Falls du einen anderen Branch nutzt, hier anpassen

jobs:
  ci_pipeline:
    name: Code Linting & Tests
    runs-on: ubuntu-latest

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4

      - name: Node.js einrichten
        uses: actions/setup-node@v4
        with:
          node-version: 18  # Falls du eine andere Version nutzt, hier anpassen

      - name: Abhängigkeiten installieren (Backend)
        working-directory: backend
        run: npm install --include=dev

      - name: Linting für Backend ausführen
        working-directory: backend
        run: npm run lint
        continue-on-error: true  # Verhindert, dass der Build bei einem Lint-Fehler stoppt

      - name: Backend-Tests ausführen
        working-directory: backend
        run: npm test || echo "Backend tests skipped"

      - name: Abhängigkeiten installieren (Frontend)
        working-directory: frontend
        run: npm install --include=dev

      - name: Linting für Frontend ausführen
        working-directory: frontend
        run: npm run lint
        continue-on-error: true

      - name: Frontend-Tests ausführen
        working-directory: frontend
        run: npm test || echo "Frontend tests skipped"

  build:
    name: Build Frontend
    needs: ci_pipeline
    runs-on: ubuntu-latest

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4

      - name: Node.js einrichten
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Abhängigkeiten installieren
        working-directory: frontend
        run: npm install

      - name: Frontend builden
        working-directory: frontend
        run: npm run build

  deploy:
    name: Deployment to Render
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4

      - name: Backend auf Render deployen
        run: |
          curl -X POST "$RENDER_BACKEND_DEPLOY_HOOK"
        env:
          RENDER_BACKEND_DEPLOY_HOOK: ${{ secrets.RENDER_BACKEND_DEPLOY_HOOK }}

      - name: Frontend auf Render deployen
        run: |
          curl -X POST "$RENDER_FRONTEND_DEPLOY_HOOK"
        env:
          RENDER_FRONTEND_DEPLOY_HOOK: ${{ secrets.RENDER_FRONTEND_DEPLOY_HOOK }}
