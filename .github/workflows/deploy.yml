name: CI/CD Pipeline - Lint, Test, Build & Deploy

on:
  push:
    branches:
      - main 

jobs:
  # 1 LINTING & TESTS
  lint_and_test:
    name: Lint & Test (Backend & Frontend)
    runs-on: ubuntu-latest

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4

      - name: Node.js einrichten
        uses: actions/setup-node@v4
        with:
          node-version: 18  # Falls du eine andere Version nutzt, hier anpassen

      # Backend Linting & Tests
      - name: Abhängigkeiten installieren (Backend)
        working-directory: backend
        run: npm install --include=dev

      - name: Linting für Backend
        working-directory: backend
        run: npm run lint || echo "Linting-Warnungen im Backend"

      - name: MongoDB starten (für Tests)
        uses: supercharge/mongodb-github-action@1.8.0

      - name: Backend-Tests ausführen
        working-directory: backend
        env:
          MONGO_URI: mongodb://localhost:27017/testDB
        run: npm test || echo "Backend Tests fehlgeschlagen"

      # Frontend Linting & Tests
      - name: Abhängigkeiten installieren (Frontend)
        working-directory: frontend
        run: npm install --include=dev

      - name: Linting für Frontend
        working-directory: frontend
        run: npm run lint || echo "Linting-Warnungen im Frontend"

      - name: Frontend-Tests ausführen
        working-directory: frontend
        run: npm test || echo "Frontend Tests fehlgeschlagen"

  # 2 BUILD (Frontend)
  build:
    name: Build Frontend
    needs: lint_and_test  # Erst ausführen, wenn Tests erfolgreich waren
    runs-on: ubuntu-latest

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4

      - name: Node.js einrichten
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Abhängigkeiten installieren
        working-directory: frontend
        run: npm install

      - name: Frontend builden
        working-directory: frontend
        run: npm run build

  # 3 DEPLOYMENT (Backend & Frontend)
  deploy:
    name: Deployment to Render
    needs: build  # Erst ausführen, wenn der Build erfolgreich war
    runs-on: ubuntu-latest

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4

      - name: Backend auf Render deployen
        run: |
          curl -X POST "$RENDER_BACKEND_DEPLOY_HOOK"
        env:
          RENDER_BACKEND_DEPLOY_HOOK: ${{ secrets.RENDER_BACKEND_DEPLOY_HOOK }}

      - name: Frontend auf Render deployen
        run: |
          curl -X POST "$RENDER_FRONTEND_DEPLOY_HOOK"
        env:
          RENDER_FRONTEND_DEPLOY_HOOK: ${{ secrets.RENDER_FRONTEND_DEPLOY_HOOK }}
